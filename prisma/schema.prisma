generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  CURRENT
  ENDING
  EXPIRED
}

model Product {
  id          String   @id @default(uuid())
  description String
  images      Json[]
  price       Int
  status      Status   @default(CURRENT)
  slug        String   @unique
  title       String
  views       Int      @default(1)
  comments    String[]
  createdAt   DateTime @default(now()) @db.Date
  updatedAt   DateTime @updatedAt @db.Date

  authorId String
  Author   User   @relation(fields: [authorId], references: [id])

  Order Order[]

  @@map("products")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  avatar    String?   @default("")
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now()) @db.Date
  updatedAt DateTime  @updatedAt @db.Date
  Product   Product[]
  Order     Order[]
  Payment   Payment[]

  @@map("users")
}

model Order {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now()) @db.Date
  status    String
  total     Int

  userId String
  User   User   @relation(fields: [userId], references: [id])

  products Product[]
  Payment  Payment?
}

model Payment {
  id      Int     @id @default(autoincrement())
  token   String
  amount  Int
  verify  Boolean @default(false)
  transId Int?

  userId String
  User   User   @relation(fields: [userId], references: [id])

  orderId Int   @unique
  order   Order @relation(fields: [orderId], references: [id])
}
